//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_AstrologicalInfo_MatriID", "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MatrimonyModel.MatrimonyDetail), "AstrologicalInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.AstrologicalInfo), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_AstrologicalInfo_RaasiID", "Raasi", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.Raasi), "AstrologicalInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.AstrologicalInfo), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_AstrologicalInfo_StarID", "StarDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.StarDetail), "AstrologicalInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.AstrologicalInfo), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_Caste_ReligionID", "Religion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.Religion), "Caste", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.Caste), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_MatrimonyDetails_CasteID", "Caste", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.Caste), "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.MatrimonyDetail), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_SubCaste_CasteID", "Caste", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.Caste), "SubCaste", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.SubCaste), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_City_StateID", "StateDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.StateDetail), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.City), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_MatrimonyDetails_CityID", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.City), "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.MatrimonyDetail), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_MatrimonyDetails_MatriID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.Country), "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.MatrimonyDetail), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_StateDetails_CountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.Country), "StateDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.StateDetail), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_EduDetails_CurrID", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.Currency), "EduDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.EduDetail), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_EduDetails_EduID", "HighEducation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.HighEducation), "EduDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.EduDetail), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_EduDetails_MatriID", "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MatrimonyModel.MatrimonyDetail), "EduDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.EduDetail), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_Family_MatriID", "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MatrimonyModel.MatrimonyDetail), "Family", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.Family), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_Gothra_GothraID", "SubCaste", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.SubCaste), "Gothra", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.Gothra), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_MatrimonyDetails_GothraID", "Gothra", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.Gothra), "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.MatrimonyDetail), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_Habit_MatriID", "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MatrimonyModel.MatrimonyDetail), "Habit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.Habit), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_MatrimonyDetails_ReligionID", "Religion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.Religion), "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.MatrimonyDetail), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_MatrimonyDetails_StateID", "StateDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.StateDetail), "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.MatrimonyDetail), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_MatrimonyDetails_SubCasteID", "SubCaste", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.SubCaste), "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.MatrimonyDetail), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_PhysicalAttr_MatriID", "MatrimonyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MatrimonyModel.MatrimonyDetail), "PhysicalAttr", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.PhysicalAttr), true)]
[assembly: EdmRelationshipAttribute("MatrimonyModel", "fk_Raasi_StarID", "StarDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MatrimonyModel.StarDetail), "Raasi", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MatrimonyModel.Raasi), true)]

#endregion

namespace MatrimonyModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MatrimonyEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MatrimonyEntities object using the connection string found in the 'MatrimonyEntities' section of the application configuration file.
        /// </summary>
        public MatrimonyEntities() : base("name=MatrimonyEntities", "MatrimonyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MatrimonyEntities object.
        /// </summary>
        public MatrimonyEntities(string connectionString) : base(connectionString, "MatrimonyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MatrimonyEntities object.
        /// </summary>
        public MatrimonyEntities(EntityConnection connection) : base(connection, "MatrimonyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AstrologicalInfo> AstrologicalInfoes
        {
            get
            {
                if ((_AstrologicalInfoes == null))
                {
                    _AstrologicalInfoes = base.CreateObjectSet<AstrologicalInfo>("AstrologicalInfoes");
                }
                return _AstrologicalInfoes;
            }
        }
        private ObjectSet<AstrologicalInfo> _AstrologicalInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Caste> Castes
        {
            get
            {
                if ((_Castes == null))
                {
                    _Castes = base.CreateObjectSet<Caste>("Castes");
                }
                return _Castes;
            }
        }
        private ObjectSet<Caste> _Castes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EduDetail> EduDetails
        {
            get
            {
                if ((_EduDetails == null))
                {
                    _EduDetails = base.CreateObjectSet<EduDetail>("EduDetails");
                }
                return _EduDetails;
            }
        }
        private ObjectSet<EduDetail> _EduDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Family> Families
        {
            get
            {
                if ((_Families == null))
                {
                    _Families = base.CreateObjectSet<Family>("Families");
                }
                return _Families;
            }
        }
        private ObjectSet<Family> _Families;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gothra> Gothras
        {
            get
            {
                if ((_Gothras == null))
                {
                    _Gothras = base.CreateObjectSet<Gothra>("Gothras");
                }
                return _Gothras;
            }
        }
        private ObjectSet<Gothra> _Gothras;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Habit> Habits
        {
            get
            {
                if ((_Habits == null))
                {
                    _Habits = base.CreateObjectSet<Habit>("Habits");
                }
                return _Habits;
            }
        }
        private ObjectSet<Habit> _Habits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HighEducation> HighEducations
        {
            get
            {
                if ((_HighEducations == null))
                {
                    _HighEducations = base.CreateObjectSet<HighEducation>("HighEducations");
                }
                return _HighEducations;
            }
        }
        private ObjectSet<HighEducation> _HighEducations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MatrimonyDetail> MatrimonyDetails
        {
            get
            {
                if ((_MatrimonyDetails == null))
                {
                    _MatrimonyDetails = base.CreateObjectSet<MatrimonyDetail>("MatrimonyDetails");
                }
                return _MatrimonyDetails;
            }
        }
        private ObjectSet<MatrimonyDetail> _MatrimonyDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MotherTongue> MotherTongues
        {
            get
            {
                if ((_MotherTongues == null))
                {
                    _MotherTongues = base.CreateObjectSet<MotherTongue>("MotherTongues");
                }
                return _MotherTongues;
            }
        }
        private ObjectSet<MotherTongue> _MotherTongues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Occupation> Occupations
        {
            get
            {
                if ((_Occupations == null))
                {
                    _Occupations = base.CreateObjectSet<Occupation>("Occupations");
                }
                return _Occupations;
            }
        }
        private ObjectSet<Occupation> _Occupations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhysicalAttr> PhysicalAttrs
        {
            get
            {
                if ((_PhysicalAttrs == null))
                {
                    _PhysicalAttrs = base.CreateObjectSet<PhysicalAttr>("PhysicalAttrs");
                }
                return _PhysicalAttrs;
            }
        }
        private ObjectSet<PhysicalAttr> _PhysicalAttrs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Raasi> Raasis
        {
            get
            {
                if ((_Raasis == null))
                {
                    _Raasis = base.CreateObjectSet<Raasi>("Raasis");
                }
                return _Raasis;
            }
        }
        private ObjectSet<Raasi> _Raasis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Religion> Religions
        {
            get
            {
                if ((_Religions == null))
                {
                    _Religions = base.CreateObjectSet<Religion>("Religions");
                }
                return _Religions;
            }
        }
        private ObjectSet<Religion> _Religions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StarDetail> StarDetails
        {
            get
            {
                if ((_StarDetails == null))
                {
                    _StarDetails = base.CreateObjectSet<StarDetail>("StarDetails");
                }
                return _StarDetails;
            }
        }
        private ObjectSet<StarDetail> _StarDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StateDetail> StateDetails
        {
            get
            {
                if ((_StateDetails == null))
                {
                    _StateDetails = base.CreateObjectSet<StateDetail>("StateDetails");
                }
                return _StateDetails;
            }
        }
        private ObjectSet<StateDetail> _StateDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubCaste> SubCastes
        {
            get
            {
                if ((_SubCastes == null))
                {
                    _SubCastes = base.CreateObjectSet<SubCaste>("SubCastes");
                }
                return _SubCastes;
            }
        }
        private ObjectSet<SubCaste> _SubCastes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AstrologicalInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAstrologicalInfoes(AstrologicalInfo astrologicalInfo)
        {
            base.AddObject("AstrologicalInfoes", astrologicalInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Castes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCastes(Caste caste)
        {
            base.AddObject("Castes", caste);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EduDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEduDetails(EduDetail eduDetail)
        {
            base.AddObject("EduDetails", eduDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Families EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFamilies(Family family)
        {
            base.AddObject("Families", family);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Gothras EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGothras(Gothra gothra)
        {
            base.AddObject("Gothras", gothra);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Habits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHabits(Habit habit)
        {
            base.AddObject("Habits", habit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HighEducations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHighEducations(HighEducation highEducation)
        {
            base.AddObject("HighEducations", highEducation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MatrimonyDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMatrimonyDetails(MatrimonyDetail matrimonyDetail)
        {
            base.AddObject("MatrimonyDetails", matrimonyDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MotherTongues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMotherTongues(MotherTongue motherTongue)
        {
            base.AddObject("MotherTongues", motherTongue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Occupations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOccupations(Occupation occupation)
        {
            base.AddObject("Occupations", occupation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhysicalAttrs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhysicalAttrs(PhysicalAttr physicalAttr)
        {
            base.AddObject("PhysicalAttrs", physicalAttr);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Raasis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRaasis(Raasi raasi)
        {
            base.AddObject("Raasis", raasi);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Religions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReligions(Religion religion)
        {
            base.AddObject("Religions", religion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StarDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStarDetails(StarDetail starDetail)
        {
            base.AddObject("StarDetails", starDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StateDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStateDetails(StateDetail stateDetail)
        {
            base.AddObject("StateDetails", stateDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubCastes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubCastes(SubCaste subCaste)
        {
            base.AddObject("SubCastes", subCaste);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="AstrologicalInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AstrologicalInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AstrologicalInfo object.
        /// </summary>
        /// <param name="matrimonyID">Initial value of the MatrimonyID property.</param>
        public static AstrologicalInfo CreateAstrologicalInfo(global::System.Int32 matrimonyID)
        {
            AstrologicalInfo astrologicalInfo = new AstrologicalInfo();
            astrologicalInfo.MatrimonyID = matrimonyID;
            return astrologicalInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatrimonyID
        {
            get
            {
                return _MatrimonyID;
            }
            set
            {
                if (_MatrimonyID != value)
                {
                    OnMatrimonyIDChanging(value);
                    ReportPropertyChanging("MatrimonyID");
                    _MatrimonyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MatrimonyID");
                    OnMatrimonyIDChanged();
                }
            }
        }
        private global::System.Int32 _MatrimonyID;
        partial void OnMatrimonyIDChanging(global::System.Int32 value);
        partial void OnMatrimonyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dosham
        {
            get
            {
                return _Dosham;
            }
            set
            {
                OnDoshamChanging(value);
                ReportPropertyChanging("Dosham");
                _Dosham = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dosham");
                OnDoshamChanged();
            }
        }
        private global::System.String _Dosham;
        partial void OnDoshamChanging(global::System.String value);
        partial void OnDoshamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StarID
        {
            get
            {
                return _StarID;
            }
            set
            {
                OnStarIDChanging(value);
                ReportPropertyChanging("StarID");
                _StarID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StarID");
                OnStarIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StarID;
        partial void OnStarIDChanging(Nullable<global::System.Int32> value);
        partial void OnStarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RaasiID
        {
            get
            {
                return _RaasiID;
            }
            set
            {
                OnRaasiIDChanging(value);
                ReportPropertyChanging("RaasiID");
                _RaasiID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RaasiID");
                OnRaasiIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RaasiID;
        partial void OnRaasiIDChanging(Nullable<global::System.Int32> value);
        partial void OnRaasiIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_AstrologicalInfo_MatriID", "MatrimonyDetails")]
        public MatrimonyDetail MatrimonyDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_AstrologicalInfo_MatriID", "MatrimonyDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_AstrologicalInfo_MatriID", "MatrimonyDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatrimonyDetail> MatrimonyDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_AstrologicalInfo_MatriID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_AstrologicalInfo_MatriID", "MatrimonyDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_AstrologicalInfo_RaasiID", "Raasi")]
        public Raasi Raasi
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Raasi>("MatrimonyModel.fk_AstrologicalInfo_RaasiID", "Raasi").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Raasi>("MatrimonyModel.fk_AstrologicalInfo_RaasiID", "Raasi").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Raasi> RaasiReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Raasi>("MatrimonyModel.fk_AstrologicalInfo_RaasiID", "Raasi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Raasi>("MatrimonyModel.fk_AstrologicalInfo_RaasiID", "Raasi", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_AstrologicalInfo_StarID", "StarDetails")]
        public StarDetail StarDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StarDetail>("MatrimonyModel.fk_AstrologicalInfo_StarID", "StarDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StarDetail>("MatrimonyModel.fk_AstrologicalInfo_StarID", "StarDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StarDetail> StarDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StarDetail>("MatrimonyModel.fk_AstrologicalInfo_StarID", "StarDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StarDetail>("MatrimonyModel.fk_AstrologicalInfo_StarID", "StarDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="Caste")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Caste : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Caste object.
        /// </summary>
        /// <param name="casteID">Initial value of the CasteID property.</param>
        public static Caste CreateCaste(global::System.Int32 casteID)
        {
            Caste caste = new Caste();
            caste.CasteID = casteID;
            return caste;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CasteID
        {
            get
            {
                return _CasteID;
            }
            set
            {
                if (_CasteID != value)
                {
                    OnCasteIDChanging(value);
                    ReportPropertyChanging("CasteID");
                    _CasteID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CasteID");
                    OnCasteIDChanged();
                }
            }
        }
        private global::System.Int32 _CasteID;
        partial void OnCasteIDChanging(global::System.Int32 value);
        partial void OnCasteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CasteName
        {
            get
            {
                return _CasteName;
            }
            set
            {
                OnCasteNameChanging(value);
                ReportPropertyChanging("CasteName");
                _CasteName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CasteName");
                OnCasteNameChanged();
            }
        }
        private global::System.String _CasteName;
        partial void OnCasteNameChanging(global::System.String value);
        partial void OnCasteNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReligionID
        {
            get
            {
                return _ReligionID;
            }
            set
            {
                OnReligionIDChanging(value);
                ReportPropertyChanging("ReligionID");
                _ReligionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReligionID");
                OnReligionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReligionID;
        partial void OnReligionIDChanging(Nullable<global::System.Int32> value);
        partial void OnReligionIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_Caste_ReligionID", "Religion")]
        public Religion Religion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("MatrimonyModel.fk_Caste_ReligionID", "Religion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("MatrimonyModel.fk_Caste_ReligionID", "Religion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Religion> ReligionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("MatrimonyModel.fk_Caste_ReligionID", "Religion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Religion>("MatrimonyModel.fk_Caste_ReligionID", "Religion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_CasteID", "MatrimonyDetails")]
        public EntityCollection<MatrimonyDetail> MatrimonyDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_CasteID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_CasteID", "MatrimonyDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_SubCaste_CasteID", "SubCaste")]
        public EntityCollection<SubCaste> SubCastes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubCaste>("MatrimonyModel.fk_SubCaste_CasteID", "SubCaste");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubCaste>("MatrimonyModel.fk_SubCaste_CasteID", "SubCaste", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="cityID">Initial value of the CityID property.</param>
        public static City CreateCity(global::System.Int32 cityID)
        {
            City city = new City();
            city.CityID = cityID;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_City_StateID", "StateDetails")]
        public StateDetail StateDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateDetail>("MatrimonyModel.fk_City_StateID", "StateDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateDetail>("MatrimonyModel.fk_City_StateID", "StateDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateDetail> StateDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateDetail>("MatrimonyModel.fk_City_StateID", "StateDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateDetail>("MatrimonyModel.fk_City_StateID", "StateDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_CityID", "MatrimonyDetails")]
        public EntityCollection<MatrimonyDetail> MatrimonyDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_CityID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_CityID", "MatrimonyDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static Country CreateCountry(global::System.Int32 countryID)
        {
            Country country = new Country();
            country.CountryID = countryID;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_MatriID", "MatrimonyDetails")]
        public EntityCollection<MatrimonyDetail> MatrimonyDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_MatriID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_MatriID", "MatrimonyDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_StateDetails_CountryID", "StateDetails")]
        public EntityCollection<StateDetail> StateDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateDetail>("MatrimonyModel.fk_StateDetails_CountryID", "StateDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateDetail>("MatrimonyModel.fk_StateDetails_CountryID", "StateDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="currID">Initial value of the CurrID property.</param>
        public static Currency CreateCurrency(global::System.Int32 currID)
        {
            Currency currency = new Currency();
            currency.CurrID = currID;
            return currency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrID
        {
            get
            {
                return _CurrID;
            }
            set
            {
                if (_CurrID != value)
                {
                    OnCurrIDChanging(value);
                    ReportPropertyChanging("CurrID");
                    _CurrID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CurrID");
                    OnCurrIDChanged();
                }
            }
        }
        private global::System.Int32 _CurrID;
        partial void OnCurrIDChanging(global::System.Int32 value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrName
        {
            get
            {
                return _CurrName;
            }
            set
            {
                OnCurrNameChanging(value);
                ReportPropertyChanging("CurrName");
                _CurrName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrName");
                OnCurrNameChanged();
            }
        }
        private global::System.String _CurrName;
        partial void OnCurrNameChanging(global::System.String value);
        partial void OnCurrNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_EduDetails_CurrID", "EduDetails")]
        public EntityCollection<EduDetail> EduDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EduDetail>("MatrimonyModel.fk_EduDetails_CurrID", "EduDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EduDetail>("MatrimonyModel.fk_EduDetails_CurrID", "EduDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="EduDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EduDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EduDetail object.
        /// </summary>
        /// <param name="matrimonyID">Initial value of the MatrimonyID property.</param>
        public static EduDetail CreateEduDetail(global::System.Int32 matrimonyID)
        {
            EduDetail eduDetail = new EduDetail();
            eduDetail.MatrimonyID = matrimonyID;
            return eduDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatrimonyID
        {
            get
            {
                return _MatrimonyID;
            }
            set
            {
                if (_MatrimonyID != value)
                {
                    OnMatrimonyIDChanging(value);
                    ReportPropertyChanging("MatrimonyID");
                    _MatrimonyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MatrimonyID");
                    OnMatrimonyIDChanged();
                }
            }
        }
        private global::System.Int32 _MatrimonyID;
        partial void OnMatrimonyIDChanging(global::System.Int32 value);
        partial void OnMatrimonyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EducationID
        {
            get
            {
                return _EducationID;
            }
            set
            {
                OnEducationIDChanging(value);
                ReportPropertyChanging("EducationID");
                _EducationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationID");
                OnEducationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EducationID;
        partial void OnEducationIDChanging(Nullable<global::System.Int32> value);
        partial void OnEducationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OccupID
        {
            get
            {
                return _OccupID;
            }
            set
            {
                OnOccupIDChanging(value);
                ReportPropertyChanging("OccupID");
                _OccupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OccupID");
                OnOccupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OccupID;
        partial void OnOccupIDChanging(Nullable<global::System.Int32> value);
        partial void OnOccupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmployedIn
        {
            get
            {
                return _EmployedIn;
            }
            set
            {
                OnEmployedInChanging(value);
                ReportPropertyChanging("EmployedIn");
                _EmployedIn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmployedIn");
                OnEmployedInChanged();
            }
        }
        private global::System.String _EmployedIn;
        partial void OnEmployedInChanging(global::System.String value);
        partial void OnEmployedInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IncomeType
        {
            get
            {
                return _IncomeType;
            }
            set
            {
                OnIncomeTypeChanging(value);
                ReportPropertyChanging("IncomeType");
                _IncomeType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IncomeType");
                OnIncomeTypeChanged();
            }
        }
        private global::System.String _IncomeType;
        partial void OnIncomeTypeChanging(global::System.String value);
        partial void OnIncomeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrID
        {
            get
            {
                return _CurrID;
            }
            set
            {
                OnCurrIDChanging(value);
                ReportPropertyChanging("CurrID");
                _CurrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrID");
                OnCurrIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrID;
        partial void OnCurrIDChanging(Nullable<global::System.Int32> value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Income
        {
            get
            {
                return _Income;
            }
            set
            {
                OnIncomeChanging(value);
                ReportPropertyChanging("Income");
                _Income = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Income");
                OnIncomeChanged();
            }
        }
        private Nullable<global::System.Int32> _Income;
        partial void OnIncomeChanging(Nullable<global::System.Int32> value);
        partial void OnIncomeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_EduDetails_CurrID", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("MatrimonyModel.fk_EduDetails_CurrID", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("MatrimonyModel.fk_EduDetails_CurrID", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("MatrimonyModel.fk_EduDetails_CurrID", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("MatrimonyModel.fk_EduDetails_CurrID", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_EduDetails_EduID", "HighEducation")]
        public HighEducation HighEducation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HighEducation>("MatrimonyModel.fk_EduDetails_EduID", "HighEducation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HighEducation>("MatrimonyModel.fk_EduDetails_EduID", "HighEducation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HighEducation> HighEducationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HighEducation>("MatrimonyModel.fk_EduDetails_EduID", "HighEducation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HighEducation>("MatrimonyModel.fk_EduDetails_EduID", "HighEducation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_EduDetails_MatriID", "MatrimonyDetails")]
        public MatrimonyDetail MatrimonyDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_EduDetails_MatriID", "MatrimonyDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_EduDetails_MatriID", "MatrimonyDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatrimonyDetail> MatrimonyDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_EduDetails_MatriID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_EduDetails_MatriID", "MatrimonyDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="Family")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Family : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Family object.
        /// </summary>
        /// <param name="matrimonyID">Initial value of the MatrimonyID property.</param>
        public static Family CreateFamily(global::System.Int32 matrimonyID)
        {
            Family family = new Family();
            family.MatrimonyID = matrimonyID;
            return family;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatrimonyID
        {
            get
            {
                return _MatrimonyID;
            }
            set
            {
                if (_MatrimonyID != value)
                {
                    OnMatrimonyIDChanging(value);
                    ReportPropertyChanging("MatrimonyID");
                    _MatrimonyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MatrimonyID");
                    OnMatrimonyIDChanged();
                }
            }
        }
        private global::System.Int32 _MatrimonyID;
        partial void OnMatrimonyIDChanging(global::System.Int32 value);
        partial void OnMatrimonyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FamilyStatus
        {
            get
            {
                return _FamilyStatus;
            }
            set
            {
                OnFamilyStatusChanging(value);
                ReportPropertyChanging("FamilyStatus");
                _FamilyStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FamilyStatus");
                OnFamilyStatusChanged();
            }
        }
        private global::System.String _FamilyStatus;
        partial void OnFamilyStatusChanging(global::System.String value);
        partial void OnFamilyStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FamilyType
        {
            get
            {
                return _FamilyType;
            }
            set
            {
                OnFamilyTypeChanging(value);
                ReportPropertyChanging("FamilyType");
                _FamilyType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FamilyType");
                OnFamilyTypeChanged();
            }
        }
        private global::System.String _FamilyType;
        partial void OnFamilyTypeChanging(global::System.String value);
        partial void OnFamilyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FamilyValues
        {
            get
            {
                return _FamilyValues;
            }
            set
            {
                OnFamilyValuesChanging(value);
                ReportPropertyChanging("FamilyValues");
                _FamilyValues = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FamilyValues");
                OnFamilyValuesChanged();
            }
        }
        private global::System.String _FamilyValues;
        partial void OnFamilyValuesChanging(global::System.String value);
        partial void OnFamilyValuesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_Family_MatriID", "MatrimonyDetails")]
        public MatrimonyDetail MatrimonyDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_Family_MatriID", "MatrimonyDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_Family_MatriID", "MatrimonyDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatrimonyDetail> MatrimonyDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_Family_MatriID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_Family_MatriID", "MatrimonyDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="Gothra")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gothra : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gothra object.
        /// </summary>
        /// <param name="gothraID">Initial value of the GothraID property.</param>
        public static Gothra CreateGothra(global::System.Int32 gothraID)
        {
            Gothra gothra = new Gothra();
            gothra.GothraID = gothraID;
            return gothra;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GothraID
        {
            get
            {
                return _GothraID;
            }
            set
            {
                if (_GothraID != value)
                {
                    OnGothraIDChanging(value);
                    ReportPropertyChanging("GothraID");
                    _GothraID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GothraID");
                    OnGothraIDChanged();
                }
            }
        }
        private global::System.Int32 _GothraID;
        partial void OnGothraIDChanging(global::System.Int32 value);
        partial void OnGothraIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GothraName
        {
            get
            {
                return _GothraName;
            }
            set
            {
                OnGothraNameChanging(value);
                ReportPropertyChanging("GothraName");
                _GothraName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GothraName");
                OnGothraNameChanged();
            }
        }
        private global::System.String _GothraName;
        partial void OnGothraNameChanging(global::System.String value);
        partial void OnGothraNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubCasteID
        {
            get
            {
                return _SubCasteID;
            }
            set
            {
                OnSubCasteIDChanging(value);
                ReportPropertyChanging("SubCasteID");
                _SubCasteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubCasteID");
                OnSubCasteIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubCasteID;
        partial void OnSubCasteIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubCasteIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_Gothra_GothraID", "SubCaste")]
        public SubCaste SubCaste
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCaste>("MatrimonyModel.fk_Gothra_GothraID", "SubCaste").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCaste>("MatrimonyModel.fk_Gothra_GothraID", "SubCaste").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubCaste> SubCasteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCaste>("MatrimonyModel.fk_Gothra_GothraID", "SubCaste");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubCaste>("MatrimonyModel.fk_Gothra_GothraID", "SubCaste", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_GothraID", "MatrimonyDetails")]
        public EntityCollection<MatrimonyDetail> MatrimonyDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_GothraID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_GothraID", "MatrimonyDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="Habit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Habit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Habit object.
        /// </summary>
        /// <param name="matrimonyID">Initial value of the MatrimonyID property.</param>
        public static Habit CreateHabit(global::System.Int32 matrimonyID)
        {
            Habit habit = new Habit();
            habit.MatrimonyID = matrimonyID;
            return habit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatrimonyID
        {
            get
            {
                return _MatrimonyID;
            }
            set
            {
                if (_MatrimonyID != value)
                {
                    OnMatrimonyIDChanging(value);
                    ReportPropertyChanging("MatrimonyID");
                    _MatrimonyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MatrimonyID");
                    OnMatrimonyIDChanged();
                }
            }
        }
        private global::System.Int32 _MatrimonyID;
        partial void OnMatrimonyIDChanging(global::System.Int32 value);
        partial void OnMatrimonyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Food
        {
            get
            {
                return _Food;
            }
            set
            {
                OnFoodChanging(value);
                ReportPropertyChanging("Food");
                _Food = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Food");
                OnFoodChanged();
            }
        }
        private global::System.String _Food;
        partial void OnFoodChanging(global::System.String value);
        partial void OnFoodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Smoking
        {
            get
            {
                return _Smoking;
            }
            set
            {
                OnSmokingChanging(value);
                ReportPropertyChanging("Smoking");
                _Smoking = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Smoking");
                OnSmokingChanged();
            }
        }
        private global::System.String _Smoking;
        partial void OnSmokingChanging(global::System.String value);
        partial void OnSmokingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Drinking
        {
            get
            {
                return _Drinking;
            }
            set
            {
                OnDrinkingChanging(value);
                ReportPropertyChanging("Drinking");
                _Drinking = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Drinking");
                OnDrinkingChanged();
            }
        }
        private global::System.String _Drinking;
        partial void OnDrinkingChanging(global::System.String value);
        partial void OnDrinkingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_Habit_MatriID", "MatrimonyDetails")]
        public MatrimonyDetail MatrimonyDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_Habit_MatriID", "MatrimonyDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_Habit_MatriID", "MatrimonyDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatrimonyDetail> MatrimonyDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_Habit_MatriID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_Habit_MatriID", "MatrimonyDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="HighEducation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HighEducation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HighEducation object.
        /// </summary>
        /// <param name="educationID">Initial value of the EducationID property.</param>
        public static HighEducation CreateHighEducation(global::System.Int32 educationID)
        {
            HighEducation highEducation = new HighEducation();
            highEducation.EducationID = educationID;
            return highEducation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EducationID
        {
            get
            {
                return _EducationID;
            }
            set
            {
                if (_EducationID != value)
                {
                    OnEducationIDChanging(value);
                    ReportPropertyChanging("EducationID");
                    _EducationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EducationID");
                    OnEducationIDChanged();
                }
            }
        }
        private global::System.Int32 _EducationID;
        partial void OnEducationIDChanging(global::System.Int32 value);
        partial void OnEducationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EducationName
        {
            get
            {
                return _EducationName;
            }
            set
            {
                OnEducationNameChanging(value);
                ReportPropertyChanging("EducationName");
                _EducationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EducationName");
                OnEducationNameChanged();
            }
        }
        private global::System.String _EducationName;
        partial void OnEducationNameChanging(global::System.String value);
        partial void OnEducationNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_EduDetails_EduID", "EduDetails")]
        public EntityCollection<EduDetail> EduDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EduDetail>("MatrimonyModel.fk_EduDetails_EduID", "EduDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EduDetail>("MatrimonyModel.fk_EduDetails_EduID", "EduDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="MatrimonyDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MatrimonyDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MatrimonyDetail object.
        /// </summary>
        /// <param name="matrimonyID">Initial value of the MatrimonyID property.</param>
        public static MatrimonyDetail CreateMatrimonyDetail(global::System.Int32 matrimonyID)
        {
            MatrimonyDetail matrimonyDetail = new MatrimonyDetail();
            matrimonyDetail.MatrimonyID = matrimonyID;
            return matrimonyDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatrimonyID
        {
            get
            {
                return _MatrimonyID;
            }
            set
            {
                if (_MatrimonyID != value)
                {
                    OnMatrimonyIDChanging(value);
                    ReportPropertyChanging("MatrimonyID");
                    _MatrimonyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MatrimonyID");
                    OnMatrimonyIDChanged();
                }
            }
        }
        private global::System.Int32 _MatrimonyID;
        partial void OnMatrimonyIDChanging(global::System.Int32 value);
        partial void OnMatrimonyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private Nullable<global::System.DateTime> _DOB;
        partial void OnDOBChanging(Nullable<global::System.DateTime> value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileNo
        {
            get
            {
                return _MobileNo;
            }
            set
            {
                OnMobileNoChanging(value);
                ReportPropertyChanging("MobileNo");
                _MobileNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileNo");
                OnMobileNoChanged();
            }
        }
        private global::System.String _MobileNo;
        partial void OnMobileNoChanging(global::System.String value);
        partial void OnMobileNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReligionID
        {
            get
            {
                return _ReligionID;
            }
            set
            {
                OnReligionIDChanging(value);
                ReportPropertyChanging("ReligionID");
                _ReligionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReligionID");
                OnReligionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReligionID;
        partial void OnReligionIDChanging(Nullable<global::System.Int32> value);
        partial void OnReligionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CasteID
        {
            get
            {
                return _CasteID;
            }
            set
            {
                OnCasteIDChanging(value);
                ReportPropertyChanging("CasteID");
                _CasteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CasteID");
                OnCasteIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CasteID;
        partial void OnCasteIDChanging(Nullable<global::System.Int32> value);
        partial void OnCasteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubCasteID
        {
            get
            {
                return _SubCasteID;
            }
            set
            {
                OnSubCasteIDChanging(value);
                ReportPropertyChanging("SubCasteID");
                _SubCasteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubCasteID");
                OnSubCasteIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubCasteID;
        partial void OnSubCasteIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubCasteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GothraID
        {
            get
            {
                return _GothraID;
            }
            set
            {
                OnGothraIDChanging(value);
                ReportPropertyChanging("GothraID");
                _GothraID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GothraID");
                OnGothraIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GothraID;
        partial void OnGothraIDChanging(Nullable<global::System.Int32> value);
        partial void OnGothraIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaritalStatus
        {
            get
            {
                return _MaritalStatus;
            }
            set
            {
                OnMaritalStatusChanging(value);
                ReportPropertyChanging("MaritalStatus");
                _MaritalStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaritalStatus");
                OnMaritalStatusChanged();
            }
        }
        private global::System.String _MaritalStatus;
        partial void OnMaritalStatusChanging(global::System.String value);
        partial void OnMaritalStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NoOfChild
        {
            get
            {
                return _NoOfChild;
            }
            set
            {
                OnNoOfChildChanging(value);
                ReportPropertyChanging("NoOfChild");
                _NoOfChild = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NoOfChild");
                OnNoOfChildChanged();
            }
        }
        private global::System.String _NoOfChild;
        partial void OnNoOfChildChanging(global::System.String value);
        partial void OnNoOfChildChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LivingWith
        {
            get
            {
                return _LivingWith;
            }
            set
            {
                OnLivingWithChanging(value);
                ReportPropertyChanging("LivingWith");
                _LivingWith = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LivingWith");
                OnLivingWithChanged();
            }
        }
        private global::System.String _LivingWith;
        partial void OnLivingWithChanging(global::System.String value);
        partial void OnLivingWithChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginPwd
        {
            get
            {
                return _LoginPwd;
            }
            set
            {
                OnLoginPwdChanging(value);
                ReportPropertyChanging("LoginPwd");
                _LoginPwd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginPwd");
                OnLoginPwdChanged();
            }
        }
        private global::System.String _LoginPwd;
        partial void OnLoginPwdChanging(global::System.String value);
        partial void OnLoginPwdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionInfo
        {
            get
            {
                return _DescriptionInfo;
            }
            set
            {
                OnDescriptionInfoChanging(value);
                ReportPropertyChanging("DescriptionInfo");
                _DescriptionInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionInfo");
                OnDescriptionInfoChanged();
            }
        }
        private global::System.String _DescriptionInfo;
        partial void OnDescriptionInfoChanging(global::System.String value);
        partial void OnDescriptionInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActiveInd
        {
            get
            {
                return _ActiveInd;
            }
            set
            {
                OnActiveIndChanging(value);
                ReportPropertyChanging("ActiveInd");
                _ActiveInd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActiveInd");
                OnActiveIndChanged();
            }
        }
        private global::System.String _ActiveInd;
        partial void OnActiveIndChanging(global::System.String value);
        partial void OnActiveIndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_AstrologicalInfo_MatriID", "AstrologicalInfo")]
        public AstrologicalInfo AstrologicalInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AstrologicalInfo>("MatrimonyModel.fk_AstrologicalInfo_MatriID", "AstrologicalInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AstrologicalInfo>("MatrimonyModel.fk_AstrologicalInfo_MatriID", "AstrologicalInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AstrologicalInfo> AstrologicalInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AstrologicalInfo>("MatrimonyModel.fk_AstrologicalInfo_MatriID", "AstrologicalInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AstrologicalInfo>("MatrimonyModel.fk_AstrologicalInfo_MatriID", "AstrologicalInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_CasteID", "Caste")]
        public Caste Caste
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("MatrimonyModel.fk_MatrimonyDetails_CasteID", "Caste").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("MatrimonyModel.fk_MatrimonyDetails_CasteID", "Caste").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Caste> CasteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("MatrimonyModel.fk_MatrimonyDetails_CasteID", "Caste");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Caste>("MatrimonyModel.fk_MatrimonyDetails_CasteID", "Caste", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_CityID", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("MatrimonyModel.fk_MatrimonyDetails_CityID", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("MatrimonyModel.fk_MatrimonyDetails_CityID", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("MatrimonyModel.fk_MatrimonyDetails_CityID", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("MatrimonyModel.fk_MatrimonyDetails_CityID", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_MatriID", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MatrimonyModel.fk_MatrimonyDetails_MatriID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MatrimonyModel.fk_MatrimonyDetails_MatriID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MatrimonyModel.fk_MatrimonyDetails_MatriID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("MatrimonyModel.fk_MatrimonyDetails_MatriID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_EduDetails_MatriID", "EduDetails")]
        public EduDetail EduDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EduDetail>("MatrimonyModel.fk_EduDetails_MatriID", "EduDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EduDetail>("MatrimonyModel.fk_EduDetails_MatriID", "EduDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EduDetail> EduDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EduDetail>("MatrimonyModel.fk_EduDetails_MatriID", "EduDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EduDetail>("MatrimonyModel.fk_EduDetails_MatriID", "EduDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_Family_MatriID", "Family")]
        public Family Family
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Family>("MatrimonyModel.fk_Family_MatriID", "Family").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Family>("MatrimonyModel.fk_Family_MatriID", "Family").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Family> FamilyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Family>("MatrimonyModel.fk_Family_MatriID", "Family");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Family>("MatrimonyModel.fk_Family_MatriID", "Family", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_GothraID", "Gothra")]
        public Gothra Gothra
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gothra>("MatrimonyModel.fk_MatrimonyDetails_GothraID", "Gothra").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gothra>("MatrimonyModel.fk_MatrimonyDetails_GothraID", "Gothra").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gothra> GothraReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gothra>("MatrimonyModel.fk_MatrimonyDetails_GothraID", "Gothra");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gothra>("MatrimonyModel.fk_MatrimonyDetails_GothraID", "Gothra", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_Habit_MatriID", "Habit")]
        public Habit Habit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Habit>("MatrimonyModel.fk_Habit_MatriID", "Habit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Habit>("MatrimonyModel.fk_Habit_MatriID", "Habit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Habit> HabitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Habit>("MatrimonyModel.fk_Habit_MatriID", "Habit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Habit>("MatrimonyModel.fk_Habit_MatriID", "Habit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_ReligionID", "Religion")]
        public Religion Religion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("MatrimonyModel.fk_MatrimonyDetails_ReligionID", "Religion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("MatrimonyModel.fk_MatrimonyDetails_ReligionID", "Religion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Religion> ReligionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("MatrimonyModel.fk_MatrimonyDetails_ReligionID", "Religion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Religion>("MatrimonyModel.fk_MatrimonyDetails_ReligionID", "Religion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_StateID", "StateDetails")]
        public StateDetail StateDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateDetail>("MatrimonyModel.fk_MatrimonyDetails_StateID", "StateDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateDetail>("MatrimonyModel.fk_MatrimonyDetails_StateID", "StateDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateDetail> StateDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateDetail>("MatrimonyModel.fk_MatrimonyDetails_StateID", "StateDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateDetail>("MatrimonyModel.fk_MatrimonyDetails_StateID", "StateDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_SubCasteID", "SubCaste")]
        public SubCaste SubCaste
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCaste>("MatrimonyModel.fk_MatrimonyDetails_SubCasteID", "SubCaste").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCaste>("MatrimonyModel.fk_MatrimonyDetails_SubCasteID", "SubCaste").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubCaste> SubCasteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCaste>("MatrimonyModel.fk_MatrimonyDetails_SubCasteID", "SubCaste");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubCaste>("MatrimonyModel.fk_MatrimonyDetails_SubCasteID", "SubCaste", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_PhysicalAttr_MatriID", "PhysicalAttr")]
        public PhysicalAttr PhysicalAttr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhysicalAttr>("MatrimonyModel.fk_PhysicalAttr_MatriID", "PhysicalAttr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhysicalAttr>("MatrimonyModel.fk_PhysicalAttr_MatriID", "PhysicalAttr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhysicalAttr> PhysicalAttrReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhysicalAttr>("MatrimonyModel.fk_PhysicalAttr_MatriID", "PhysicalAttr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhysicalAttr>("MatrimonyModel.fk_PhysicalAttr_MatriID", "PhysicalAttr", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="MotherTongue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MotherTongue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MotherTongue object.
        /// </summary>
        /// <param name="tongueID">Initial value of the TongueID property.</param>
        public static MotherTongue CreateMotherTongue(global::System.Int32 tongueID)
        {
            MotherTongue motherTongue = new MotherTongue();
            motherTongue.TongueID = tongueID;
            return motherTongue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TongueID
        {
            get
            {
                return _TongueID;
            }
            set
            {
                if (_TongueID != value)
                {
                    OnTongueIDChanging(value);
                    ReportPropertyChanging("TongueID");
                    _TongueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TongueID");
                    OnTongueIDChanged();
                }
            }
        }
        private global::System.Int32 _TongueID;
        partial void OnTongueIDChanging(global::System.Int32 value);
        partial void OnTongueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TongueName
        {
            get
            {
                return _TongueName;
            }
            set
            {
                OnTongueNameChanging(value);
                ReportPropertyChanging("TongueName");
                _TongueName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TongueName");
                OnTongueNameChanged();
            }
        }
        private global::System.String _TongueName;
        partial void OnTongueNameChanging(global::System.String value);
        partial void OnTongueNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="Occupation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Occupation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Occupation object.
        /// </summary>
        /// <param name="occupID">Initial value of the OccupID property.</param>
        public static Occupation CreateOccupation(global::System.Int32 occupID)
        {
            Occupation occupation = new Occupation();
            occupation.OccupID = occupID;
            return occupation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OccupID
        {
            get
            {
                return _OccupID;
            }
            set
            {
                if (_OccupID != value)
                {
                    OnOccupIDChanging(value);
                    ReportPropertyChanging("OccupID");
                    _OccupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OccupID");
                    OnOccupIDChanged();
                }
            }
        }
        private global::System.Int32 _OccupID;
        partial void OnOccupIDChanging(global::System.Int32 value);
        partial void OnOccupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OccupName
        {
            get
            {
                return _OccupName;
            }
            set
            {
                OnOccupNameChanging(value);
                ReportPropertyChanging("OccupName");
                _OccupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OccupName");
                OnOccupNameChanged();
            }
        }
        private global::System.String _OccupName;
        partial void OnOccupNameChanging(global::System.String value);
        partial void OnOccupNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="PhysicalAttr")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhysicalAttr : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhysicalAttr object.
        /// </summary>
        /// <param name="matrimonyID">Initial value of the MatrimonyID property.</param>
        public static PhysicalAttr CreatePhysicalAttr(global::System.Int32 matrimonyID)
        {
            PhysicalAttr physicalAttr = new PhysicalAttr();
            physicalAttr.MatrimonyID = matrimonyID;
            return physicalAttr;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatrimonyID
        {
            get
            {
                return _MatrimonyID;
            }
            set
            {
                if (_MatrimonyID != value)
                {
                    OnMatrimonyIDChanging(value);
                    ReportPropertyChanging("MatrimonyID");
                    _MatrimonyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MatrimonyID");
                    OnMatrimonyIDChanged();
                }
            }
        }
        private global::System.Int32 _MatrimonyID;
        partial void OnMatrimonyIDChanging(global::System.Int32 value);
        partial void OnMatrimonyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HeightAttr
        {
            get
            {
                return _HeightAttr;
            }
            set
            {
                OnHeightAttrChanging(value);
                ReportPropertyChanging("HeightAttr");
                _HeightAttr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeightAttr");
                OnHeightAttrChanged();
            }
        }
        private Nullable<global::System.Int32> _HeightAttr;
        partial void OnHeightAttrChanging(Nullable<global::System.Int32> value);
        partial void OnHeightAttrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WeightAttr
        {
            get
            {
                return _WeightAttr;
            }
            set
            {
                OnWeightAttrChanging(value);
                ReportPropertyChanging("WeightAttr");
                _WeightAttr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightAttr");
                OnWeightAttrChanged();
            }
        }
        private Nullable<global::System.Int32> _WeightAttr;
        partial void OnWeightAttrChanging(Nullable<global::System.Int32> value);
        partial void OnWeightAttrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BodyType
        {
            get
            {
                return _BodyType;
            }
            set
            {
                OnBodyTypeChanging(value);
                ReportPropertyChanging("BodyType");
                _BodyType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BodyType");
                OnBodyTypeChanged();
            }
        }
        private global::System.String _BodyType;
        partial void OnBodyTypeChanging(global::System.String value);
        partial void OnBodyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Complexion
        {
            get
            {
                return _Complexion;
            }
            set
            {
                OnComplexionChanging(value);
                ReportPropertyChanging("Complexion");
                _Complexion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Complexion");
                OnComplexionChanged();
            }
        }
        private global::System.String _Complexion;
        partial void OnComplexionChanging(global::System.String value);
        partial void OnComplexionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhysicalStatus
        {
            get
            {
                return _PhysicalStatus;
            }
            set
            {
                OnPhysicalStatusChanging(value);
                ReportPropertyChanging("PhysicalStatus");
                _PhysicalStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhysicalStatus");
                OnPhysicalStatusChanged();
            }
        }
        private global::System.String _PhysicalStatus;
        partial void OnPhysicalStatusChanging(global::System.String value);
        partial void OnPhysicalStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_PhysicalAttr_MatriID", "MatrimonyDetails")]
        public MatrimonyDetail MatrimonyDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_PhysicalAttr_MatriID", "MatrimonyDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_PhysicalAttr_MatriID", "MatrimonyDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatrimonyDetail> MatrimonyDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_PhysicalAttr_MatriID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatrimonyDetail>("MatrimonyModel.fk_PhysicalAttr_MatriID", "MatrimonyDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="Raasi")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Raasi : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Raasi object.
        /// </summary>
        /// <param name="raasiID">Initial value of the RaasiID property.</param>
        public static Raasi CreateRaasi(global::System.Int32 raasiID)
        {
            Raasi raasi = new Raasi();
            raasi.RaasiID = raasiID;
            return raasi;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RaasiID
        {
            get
            {
                return _RaasiID;
            }
            set
            {
                if (_RaasiID != value)
                {
                    OnRaasiIDChanging(value);
                    ReportPropertyChanging("RaasiID");
                    _RaasiID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RaasiID");
                    OnRaasiIDChanged();
                }
            }
        }
        private global::System.Int32 _RaasiID;
        partial void OnRaasiIDChanging(global::System.Int32 value);
        partial void OnRaasiIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RaasiName
        {
            get
            {
                return _RaasiName;
            }
            set
            {
                OnRaasiNameChanging(value);
                ReportPropertyChanging("RaasiName");
                _RaasiName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RaasiName");
                OnRaasiNameChanged();
            }
        }
        private global::System.String _RaasiName;
        partial void OnRaasiNameChanging(global::System.String value);
        partial void OnRaasiNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StarID
        {
            get
            {
                return _StarID;
            }
            set
            {
                OnStarIDChanging(value);
                ReportPropertyChanging("StarID");
                _StarID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StarID");
                OnStarIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StarID;
        partial void OnStarIDChanging(Nullable<global::System.Int32> value);
        partial void OnStarIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_AstrologicalInfo_RaasiID", "AstrologicalInfo")]
        public EntityCollection<AstrologicalInfo> AstrologicalInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AstrologicalInfo>("MatrimonyModel.fk_AstrologicalInfo_RaasiID", "AstrologicalInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AstrologicalInfo>("MatrimonyModel.fk_AstrologicalInfo_RaasiID", "AstrologicalInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_Raasi_StarID", "StarDetails")]
        public StarDetail StarDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StarDetail>("MatrimonyModel.fk_Raasi_StarID", "StarDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StarDetail>("MatrimonyModel.fk_Raasi_StarID", "StarDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StarDetail> StarDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StarDetail>("MatrimonyModel.fk_Raasi_StarID", "StarDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StarDetail>("MatrimonyModel.fk_Raasi_StarID", "StarDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="Religion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Religion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Religion object.
        /// </summary>
        /// <param name="religionID">Initial value of the ReligionID property.</param>
        public static Religion CreateReligion(global::System.Int32 religionID)
        {
            Religion religion = new Religion();
            religion.ReligionID = religionID;
            return religion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReligionID
        {
            get
            {
                return _ReligionID;
            }
            set
            {
                if (_ReligionID != value)
                {
                    OnReligionIDChanging(value);
                    ReportPropertyChanging("ReligionID");
                    _ReligionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReligionID");
                    OnReligionIDChanged();
                }
            }
        }
        private global::System.Int32 _ReligionID;
        partial void OnReligionIDChanging(global::System.Int32 value);
        partial void OnReligionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReligionName
        {
            get
            {
                return _ReligionName;
            }
            set
            {
                OnReligionNameChanging(value);
                ReportPropertyChanging("ReligionName");
                _ReligionName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReligionName");
                OnReligionNameChanged();
            }
        }
        private global::System.String _ReligionName;
        partial void OnReligionNameChanging(global::System.String value);
        partial void OnReligionNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_Caste_ReligionID", "Caste")]
        public EntityCollection<Caste> Castes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Caste>("MatrimonyModel.fk_Caste_ReligionID", "Caste");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Caste>("MatrimonyModel.fk_Caste_ReligionID", "Caste", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_ReligionID", "MatrimonyDetails")]
        public EntityCollection<MatrimonyDetail> MatrimonyDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_ReligionID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_ReligionID", "MatrimonyDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="StarDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StarDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StarDetail object.
        /// </summary>
        /// <param name="starID">Initial value of the StarID property.</param>
        public static StarDetail CreateStarDetail(global::System.Int32 starID)
        {
            StarDetail starDetail = new StarDetail();
            starDetail.StarID = starID;
            return starDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StarID
        {
            get
            {
                return _StarID;
            }
            set
            {
                if (_StarID != value)
                {
                    OnStarIDChanging(value);
                    ReportPropertyChanging("StarID");
                    _StarID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StarID");
                    OnStarIDChanged();
                }
            }
        }
        private global::System.Int32 _StarID;
        partial void OnStarIDChanging(global::System.Int32 value);
        partial void OnStarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StarName
        {
            get
            {
                return _StarName;
            }
            set
            {
                OnStarNameChanging(value);
                ReportPropertyChanging("StarName");
                _StarName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StarName");
                OnStarNameChanged();
            }
        }
        private global::System.String _StarName;
        partial void OnStarNameChanging(global::System.String value);
        partial void OnStarNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_AstrologicalInfo_StarID", "AstrologicalInfo")]
        public EntityCollection<AstrologicalInfo> AstrologicalInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AstrologicalInfo>("MatrimonyModel.fk_AstrologicalInfo_StarID", "AstrologicalInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AstrologicalInfo>("MatrimonyModel.fk_AstrologicalInfo_StarID", "AstrologicalInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_Raasi_StarID", "Raasi")]
        public EntityCollection<Raasi> Raasis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Raasi>("MatrimonyModel.fk_Raasi_StarID", "Raasi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Raasi>("MatrimonyModel.fk_Raasi_StarID", "Raasi", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="StateDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StateDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StateDetail object.
        /// </summary>
        /// <param name="stateID">Initial value of the StateID property.</param>
        public static StateDetail CreateStateDetail(global::System.Int32 stateID)
        {
            StateDetail stateDetail = new StateDetail();
            stateDetail.StateID = stateID;
            return stateDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                if (_StateID != value)
                {
                    OnStateIDChanging(value);
                    ReportPropertyChanging("StateID");
                    _StateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateID");
                    OnStateIDChanged();
                }
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_City_StateID", "City")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("MatrimonyModel.fk_City_StateID", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("MatrimonyModel.fk_City_StateID", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_StateDetails_CountryID", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MatrimonyModel.fk_StateDetails_CountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MatrimonyModel.fk_StateDetails_CountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MatrimonyModel.fk_StateDetails_CountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("MatrimonyModel.fk_StateDetails_CountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_StateID", "MatrimonyDetails")]
        public EntityCollection<MatrimonyDetail> MatrimonyDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_StateID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_StateID", "MatrimonyDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MatrimonyModel", Name="SubCaste")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubCaste : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubCaste object.
        /// </summary>
        /// <param name="subCasteID">Initial value of the SubCasteID property.</param>
        public static SubCaste CreateSubCaste(global::System.Int32 subCasteID)
        {
            SubCaste subCaste = new SubCaste();
            subCaste.SubCasteID = subCasteID;
            return subCaste;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubCasteID
        {
            get
            {
                return _SubCasteID;
            }
            set
            {
                if (_SubCasteID != value)
                {
                    OnSubCasteIDChanging(value);
                    ReportPropertyChanging("SubCasteID");
                    _SubCasteID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubCasteID");
                    OnSubCasteIDChanged();
                }
            }
        }
        private global::System.Int32 _SubCasteID;
        partial void OnSubCasteIDChanging(global::System.Int32 value);
        partial void OnSubCasteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubCasteName
        {
            get
            {
                return _SubCasteName;
            }
            set
            {
                OnSubCasteNameChanging(value);
                ReportPropertyChanging("SubCasteName");
                _SubCasteName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubCasteName");
                OnSubCasteNameChanged();
            }
        }
        private global::System.String _SubCasteName;
        partial void OnSubCasteNameChanging(global::System.String value);
        partial void OnSubCasteNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CasteID
        {
            get
            {
                return _CasteID;
            }
            set
            {
                OnCasteIDChanging(value);
                ReportPropertyChanging("CasteID");
                _CasteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CasteID");
                OnCasteIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CasteID;
        partial void OnCasteIDChanging(Nullable<global::System.Int32> value);
        partial void OnCasteIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_SubCaste_CasteID", "Caste")]
        public Caste Caste
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("MatrimonyModel.fk_SubCaste_CasteID", "Caste").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("MatrimonyModel.fk_SubCaste_CasteID", "Caste").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Caste> CasteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("MatrimonyModel.fk_SubCaste_CasteID", "Caste");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Caste>("MatrimonyModel.fk_SubCaste_CasteID", "Caste", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_Gothra_GothraID", "Gothra")]
        public EntityCollection<Gothra> Gothras
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Gothra>("MatrimonyModel.fk_Gothra_GothraID", "Gothra");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Gothra>("MatrimonyModel.fk_Gothra_GothraID", "Gothra", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MatrimonyModel", "fk_MatrimonyDetails_SubCasteID", "MatrimonyDetails")]
        public EntityCollection<MatrimonyDetail> MatrimonyDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_SubCasteID", "MatrimonyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatrimonyDetail>("MatrimonyModel.fk_MatrimonyDetails_SubCasteID", "MatrimonyDetails", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
